#+TITLE: emacs config

Ensure that /use-package/ is installed, then add the MELPA repository.
Here, I use /http/ rather than /https/, because otherwise there is a problem in installing /zetteldeft/ later (and possibly also for other packages)[fn:: https://emacs.stackexchange.com/a/39295/30033].

#+BEGIN_SRC emacs-lisp
(require 'package)

(add-to-list 'package-archives
  '("MELPA" . "http://melpa.org/packages/"))
(package-initialize)
(package-refresh-contents)

(unless (package-installed-p 'use-package)
  (package-install 'use-package))
(require 'use-package)
#+END_SRC

* Aesthetics

I'm using a light theme for now.

#+BEGIN_SRC emacs-lisp
(use-package spacemacs-common
  :ensure spacemacs-theme
  :defer t
  :init (load-theme 'spacemacs-light t))
#+END_SRC

By default, emacs shows the row but not column position of the cursor.
To enable column position in the ruler,

#+BEGIN_SRC emacs-lisp
(setq column-number-mode t)
#+END_SRC

** mixed-pitch

A minor mode that allows for variable-width fonts.

#+begin_src emacs-lisp
(use-package mixed-pitch
  :ensure t
  :hook
  (text-mode . mixed-pitch-mode))
#+end_src

#+RESULTS:

* General behaviour

By default, emacs detects a sentence end when it sees a full stop followed by two spaces.
I prefer to type only using one space after the full stop, so the next block overrides that default two-spaces behaviour.

#+BEGIN_SRC emacs-lisp
(setq sentence-end-double-space nil)
#+END_SRC

~*scratch*~ starts in /org-mode/.

#+BEGIN_SRC emacs-lisp
(setq initial-major-mode 'org-mode)
(setq initial-scratch-message nil)
#+END_SRC

** Custom functions

Insert a _z_​ero-​_w_​idth _s_​pace.

#+BEGIN_SRC emacs-lisp
(defun my-zws ()
  (interactive)
  (insert-char #x200b))
#+END_SRC

Except for the current buffer, kill all other buffers.

#+BEGIN_SRC emacs-lisp
(defun my-kill-other-buffers ()
  "Kill all other buffers."
  (interactive)
  (mapc 'kill-buffer 
        (delq (current-buffer) 
              (remove-if-not 'buffer-file-name (buffer-list)))))
#+END_SRC

Load this config file.

#+BEGIN_SRC emacs-lisp
(defun my-load-config ()
  (interactive)
    (org-babel-load-file
      (expand-file-name "config.org" user-emacs-directory)))
#+END_SRC

** Key bindings

Navigate windows much easier with ~C-.~ and ~C-,~ rather than the awkward ~C-x o~.

/TODO:/ Write ~C-,~ so that it calls the interactive function /other-window/ with count -1.
/TODO:/ Learn why tilde, capital C, dash, comma, tilde, isn't being styled correctly.

#+BEGIN_SRC emacs-lisp
(global-set-key (kbd "C-.") #'other-window)
; (global-set-key (kbd "C-,") #'previous-window)
#+END_SRC


* Org mode

#+BEGIN_SRC emacs-lisp
(require 'org)
#+END_SRC

Use inline-tasks.

#+BEGIN_SRC emacs-lisp
(require 'org-inlinetask)
#+END_SRC

Flyspell by default.
~M-$~ to open suggestions.

#+begin_src emacs-lisp
(dolist (hook '(text-mode-hook))
  (add-hook hook (lambda () (flyspell-mode 1))))
(dolist (hook '(change-log-mode-hook log-edit-mode-hook))
  (add-hook hook (lambda () (flyspell-mode -1))))
#+end_src

/TODO:/ Document the following.

#+BEGIN_SRC emacs-lisp
(global-set-key "\C-cl" 'org-store-link)
(global-set-key "\C-ca" 'org-agenda)
(setq org-log-done t)
(setq org-todo-keywords '((sequence "TODO" "IN PROGRESS" "DONE")))
#+END_SRC

** Structure Templates

[[https://orgmode.org/manual/Structure-Templates.html][Structure templates]] allow you to quickly insert predefined text into org mode files.
The default behaviour is to open an interactive menu using ~C-c C-,~, and where the text to be inserted is chosen.
I opt instead to use the older /org-tempo/ behaviour which uses a much quicker ~< trigger TAB~.
Continue using ~< s TAB~ for easy templates[fn:: https://emacs.stackexchange.com/a/46992/30033].

#+begin_src emacs-lisp
(require 'org-tempo)
#+end_src

*** Custom Structure Templates

/TODO:/ Set this as a default export option rather than a thing to be manually included.

#+begin_src emacs-lisp
(tempo-define-template "org-export-css" ; template name, for documentation only
  '("#+INFOJS_OPT: view:t toc:t ltoc:t mouse:underline buttons:0 path:http://thomasf.github.io/solarized-css/org-info.min.js" n
    "#+HTML_HEAD: <link rel=\"stylesheet\" type=\"text/css\" href=\"http://thomasf.github.io/solarized-css/solarized-light.min.css\" />" n
    "#+HTML_HEAD: <style> p { text-align: justify; } </style>")
  "<css"
  "Insert properties for Solarized CSS"
  'org-tempo-tags)
#+end_src

Quick template to insert images.
~p~ will place the cursor at that position when ~tempo-interactive~  is ~nil~, which it is.
To force a mini-buffer prompt, use ~P~ instead.

#+begin_src emacs-lisp
(tempo-define-template "org-insert-image"
  '("#+ATTR_ORG: :width 700px" n
    "#+ATTR_HTML: :width 100%" n
    "[[" (p "Link to image: ") "]]")
  "<ii"
  "Insert image"
  'org-tempo-tags)
#+end_src

** Aesthetics

Org mode does not visual wrap by default, but that's the most sensible way to view prose when you type one-sentence-per-line.

/TODO:/ Forbid visual wrapping in the middle of a word.
/FIXME:/ The =text-mode-hook= doesn't seem to be working.
#+BEGIN_SRC emacs-lisp
(add-hook 'text-mode-hook #'visual-line-mode)
#+END_SRC

The default behaviour for collapsed subtrees is to produce a free space between that collapsed subtree and the next heading only if there are at least 2 empty lines after the end of a subtree.
This is not how I'm used to typing---I usually only leave 1 empty line after each paragraph or section.

#+BEGIN_SRC emacs-lisp
(setq org-cycle-separator-lines 1)
#+END_SRC

Don't show images in their actual size!

#+BEGIN_SRC emacs-lisp
(setq org-image-actual-width nil)
#+END_SRC

** Agenda

Read tasks from the Zetteldeft directory.
#+Begin_SRC emacs-lisp
(setq org-agenda-files (quote (
  "~/notes/"
)))
#+END_SRC

In order: show 7 days, starting from the present day, not highlighting the weekends; don't show tasks if they are already done, and don't warn about deadlines beyond today in today's agenda.

#+BEGIN_SRC emacs-lisp
(setq org-agenda-span 7
      org-agenda-start-on-weekday nil
      org-agenda-weekend-days nil
      org-agenda-skip-scheduled-if-done t
      org-agenda-skip-deadline-if-done t
      org-deadline-warning-days 0)
#+END_SRC

* Flycheck

#+begin_src emacs-lisp
(use-package flycheck
  :ensure t
  :init (global-flycheck-mode))
#+end_src

* Zetteldeft

/deft-extensions/ determines which files in the /deft-directory/ should be considered as /deft/ (or /zetteldeft/) notes.
/deft-default-extension/ determines the default extension of new /deft/ (or /detteldeft/) notes.

#+BEGIN_SRC emacs-lisp
(use-package deft
  :ensure t
  :config (setq deft-directory "~/notes"
                deft-extensions '("org")
		deft-default-extension "org"
                deft-use-filename-as-title t))
#+END_SRC

#+BEGIN_SRC emacs-lisp
(use-package zetteldeft
  :ensure t
  :after deft
  :config (zetteldeft-set-classic-keybindings))
#+END_SRC

When a new file is created, automatically add a line to enter tags.

#+BEGIN_SRC emacs-lisp
(setq zetteldeft-title-suffix "\n#+TAGS: ")
#+END_SRC

* TODOs

Things to try or do:

- Remove the HTML export postamble on org mode files.
- In the [[https://orgmode.org/manual/The-date_002ftime-prompt.html][org date/time prompt]]: map ~S-f~, ~S-b~ to day movement; ~S-n~, ~S-p~ to week movement; and ~M-S-n~, ~M-S-p~ to month movement.
- Set an org-agenda custome command which shows all TODOs without a deadline or scheduled datetime[fn:: https://stackoverflow.com/questions/17003338/emacs-org-mode-how-to-find-all-todos-that-dont-have-a-deadline-specified].
- [[https://melpa.org/#/transpose-frame][transpose-frame]], but rename the functions to be prefixed with ~frame-~.
- [[https://github.com/waymondo/frog-jump-buffer][frog-jump-buffer]]
- [[https://github.com/200ok-ch/organice][organice]]
- [[https://gitlab.com/jabranham/mixed-pitch][mixed-pitch]]
- [[https://github.com/abo-abo/org-download][org-download]]

* What's Bad About emacs?

- There is no way to escape square brackets in org mode links[fn:: https://stackoverflow.com/questions/27284913/how-to-escape-square-bracket-in-org-mode-links].
  This is more of a "what's so bad about org mode".
